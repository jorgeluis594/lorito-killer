// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id        String   @id @default(uuid())
  name      String
  price     Decimal
  sku       String
  stock     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  photos    Photo[]
  categories CategoriesOnProduct[]
  orderItems OrderItem[]
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  name      String
  key       String
  type      String
  size      Int
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
}

model Category {
  id        String   @id @default(uuid())
  name      String
  products  CategoriesOnProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CategoriesOnProduct {
  id         String   @id @default(uuid())
  productId  String
  categoryId String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt  DateTime @default(now())
}

model OrderItem {
  id        String   @id @default(uuid())
  quantity  Int
  total     Decimal
  productId String
  orderId   String
  product   Product @relation(fields: [productId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        String    @id @default(uuid())
  total     Decimal
  status    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orderItems     OrderItem[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}